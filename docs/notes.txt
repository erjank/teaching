Ladder of Abstraction:

Teaching how to teach how to teach how to program [how to be an instructor trainer]
  |
Teaching how to teach how to program (training instructors)
  |
Teaching how to program (being an instructor)
  |
Programming

- sometimes unclear what level we're at

- more tips on actually teaching programming

- remove timings from the start of each section and show schedules for
  several variations on the class

- get appendix numbering to work

- include section headings in table of contents

---

Start of section on performance:

I was quite confused by the pages at the beginning of chapter 3.  It
joins together many excerpts without making it clear what the key
message is.  Some questions I was left with:

 - Is I/We/You bad?

- Is You/Y'all/We better?  I thought that was the point, but not clear
  whether the following paragraph about it being "tempting but wrong
  to think it is some kind of secret sauce" applies to I/We/You or
  You/Y'all/We.

- I think the message that follows is that jugyokenkyu (a mix of
  reflective practice, apprenticeship and peer critique?) is better.

- The section seems to build to this message roughly about using
  demonstrations to show how to teach, but the final bit about lateral
  knowledge transfer is more of a diversion.  Perhaps move to its own
  section or to a call-out.

Generally, I think this whole section could do with revisiting (and
revising): spell out clearly and explicitly what is good and what is
bad, and what you are suggesting the lesson is for teachers.  If
possible, I'd reduce the length of the excerpts, and try to write a
more cohesive explanation of the point being made, perhaps splitting
up the initial part into multiple sections if needed.
